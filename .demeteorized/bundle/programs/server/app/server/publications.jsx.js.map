{"version":3,"sources":["publications.jsx"],"names":[],"mappings":"YAAA,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,UAAC,WAAW,EAAE,KAAK,EAAK;AAC7C,OAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AAC3B,OAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;;AAErB,MAAI,CAAC,WAAW,EAAE;AAChB,WAAO,IAAI,CAAC,IAAI,CACd,EAAE,QAAQ,EAAE,IAAI,EAAE,EAClB;AACE,UAAI,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE;AACvB,YAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;AACnH,WAAK,EAAE,KAAK;KACb,CACF,CAAC;GACH;AACD,SAAO,IAAI,CAAC,IAAI,CACd,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EACnD;AACE,UAAM,EAAE;AACN,WAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI;AACvG,WAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;KAC9B;AACD,QAAI,EAAE;AACJ,WAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;KAC9B;AACD,SAAK,EAAE,KAAK;GACb,CACF,CAAC;CACH,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,UAAC,GAAG,EAAK;AACjC,OAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAEnB,SAAO,IAAI,CAAC,IAAI,CACd,EAAE,GAAG,EAAE,GAAG,EAAE,EACZ,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,CACxH,CAAC;CACH,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAC,UAAU,EAAK;AAChD,OAAK,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;;AAE1B,SAAO,IAAI,CAAC,IAAI,CACd,EAAE,UAAU,EAAE,UAAU,EAAE,EAC1B,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,CACxH,CAAC;CACH,CAAC,C","file":"/server/publications.jsx.js","sourcesContent":["Meteor.publish('jobs', (searchQuery, limit) => {\n  check(searchQuery, String);\n  check(limit, Number);\n\n  if (!searchQuery) {\n    return Jobs.find(\n      { isActive: true },\n      {\n        sort: { createdAt: -1 },\n        fields: { title: true, description: true, email: true, company: true, homepage: true, slug: true, createdAt: true },\n        limit: limit\n      }\n    );\n  }\n  return Jobs.find(\n    { $text: { $search: searchQuery }, isActive: true },\n    {\n      fields: {\n        title: true, description: true, email: true, company: true, homepage: true, slug: true, createdAt: true,\n        score: { $meta: 'textScore' }\n      },\n      sort: {\n        score: { $meta: 'textScore' }\n      },\n      limit: limit\n    }\n  );\n});\n\nMeteor.publish('jobById', (_id) => {\n  check(_id, String);\n\n  return Jobs.find(\n    { _id: _id },\n    { fields: { title: true, description: true, email: true, company: true, homepage: true, slug: true, createdAt: true } }\n  );\n});\n\nMeteor.publish('jobByIdentifier', (identifier) => {\n  check(identifier, String);\n\n  return Jobs.find(\n    { identifier: identifier },\n    { fields: { title: true, description: true, email: true, company: true, homepage: true, slug: true, createdAt: true } }\n  );\n});\n"]}