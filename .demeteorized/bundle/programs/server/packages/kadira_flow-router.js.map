{"version":3,"sources":["kadira:flow-router/server/router.js","kadira:flow-router/server/group.js","kadira:flow-router/server/route.js","kadira:flow-router/server/_init.js","kadira:flow-router/server/plugins/fast_render.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,2B;;AAEA,sB;AACA,oB;AACA,uB;AACA,0C;;AAEA,4B;AACA,8B;AACA,E;;AAEA,qD;AACA,+B;AACA,qD;AACA,6B;AACA,G;AACA,E;AACA,0B;AACA,gD;AACA,2B;;AAEA,qB;AACA,0C;AACA,G;;AAEA,oC;AACA,e;AACA,E;;AAEA,4C;AACA,kC;AACA,E;;AAEA,gE;AACA,iC;AACA,4C;AACA,G;;AAEA,wB;AACA,0C;AACA,oD;AACA,2C;AACA,2C;AACA,8E;AACA,iB;AACA,wC;;AAEA,6B;AACA,K;;AAEA,mF;;AAEA,0B;AACA,iD;AACA,+D;;AAEA,uD;AACA,sB;AACA,iC;AACA,G;;AAEA,c;AACA,E;;AAEA,iD;AACA,kC;AACA,E;;AAEA,iE;AACA,kE;AACA,Y;AACA,qE;AACA,8B;AACA,uE;AACA,8B;AACA,sE;AACA,I;AACA,8E;;AAEA,+C;AACA,uB;AACA,K;AACA,E;;;AAGA,kC;AACA,gB;AACA,E;;;AAGA,uC;AACA,gB;AACA,E;;;AAGA,6B;AACA,qB;AACA,kB;AACA,I;AACA,oB;AACA,kB;AACA,G;AACA,E;;AAEA,0C;AACA,gB;AACA,E;;;AAGA,wC;AACA,gB;AACA,E;;;AAGA,4C;AACA,gB;AACA,E;;;AAGA,wC;AACA,gB;AACA,E;;;AAGA,2C;AACA,gB;AACA,E;;;AAGA,2C;AACA,gB;AACA,E;;;AAGA,qC;AACA,gB;AACA,E;;;AAGA,0C;AACA,gB;AACA,E;;AAEA,oC;AACA,gB;AACA,E;;;;;;;;;;;;;;;;;;;ACjJA,mC;AACA,0B;AACA,qC;;AAEA,wB;AACA,E;;AAEA,oD;AACA,kC;AACA,8C;AACA,E;;AAEA,2C;AACA,+C;AACA,sB;;AAEA,e;AACA,E;;;;;;;;;;;;;;;;;;;ACjBA,4C;AACA,0B;AACA,yB;AACA,2B;AACA,yB;;AAEA,wD;AACA,sB;;AAEA,qD;AACA,mE;AACA,qB;AACA,E;;;AAGA,yD;AACA,4B;AACA,E;;;AAGA,+C;AACA,6B;AACA,E;;;AAGA,mD;AACA,C;AACA,E;;;;;;;;;;;;;;;;;;;AC3BA,yB;AACA,0B;AACA,2B;AACA,yB;;;;;;;;;;;;;;;;;;;ACHA,yC;AACA,S;AACA,C;;AAEA,2D;;AAEA,8C;AACA,4B;AACA,8B;AACA,sB;AACA,K;AACA,G;;AAEA,6B;AACA,+C;AACA,kE;AACA,sB;;AAEA,0D;AACA,sC;AACA,sC;AACA,oC;AACA,Q;;AAEA,0B;AACA,iD;AACA,+B;AACA,4C;AACA,kD;AACA,iD;AACA,O;AACA,8C;AACA,yC;AACA,S;;AAEA,qD;AACA,kC;AACA,O;AACA,K;AACA,C","file":"/packages/kadira_flow-router.js","sourcesContent":["var Qs = Npm.require('qs');\n\nRouter = function () {\n  this._routes = [];\n  this._routesMap = {};\n  this.subscriptions = Function.prototype;\n\n  // holds onRoute callbacks\n  this._onRouteCallbacks = [];\n};\n\nRouter.prototype.route = function(pathDef, options) {\n  if (!/^\\/.*/.test(pathDef)) {\n    var message = \"route's path must start with '/'\";\n    throw new Error(message);\n  }\n  \n  options = options || {};\n  var route = new Route(this, pathDef, options);\n  this._routes.push(route);\n\n  if (options.name) {\n    this._routesMap[options.name] = route;\n  }\n\n  this._triggerRouteRegister(route);\n  return route;\n};\n\nRouter.prototype.group = function(options) {\n  return new Group(this, options);\n};\n\nRouter.prototype.path = function(pathDef, fields, queryParams) {\n  if (this._routesMap[pathDef]) {\n    pathDef = this._routesMap[pathDef].path;\n  }\n\n  fields = fields || {};\n  var regExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?]+)+/g;\n  var path = pathDef.replace(regExp, function(key) {\n    var firstRegexpChar = key.indexOf(\"(\");\n    // get the content behind : and (\\\\d+/)\n    key = key.substring(1, (firstRegexpChar > 0)? firstRegexpChar: undefined);\n    // remove +?*\n    key = key.replace(/[\\+\\*\\?]+/g, \"\");\n\n    return fields[key] || \"\";\n  });\n\n  path = path.replace(/\\/\\/+/g, \"/\"); // Replace multiple slashes with single slash\n\n  // remove trailing slash\n  // but keep the root slash if it's the only one\n  path = path.match(/^\\/{1}$/) ? path: path.replace(/\\/$/, \"\");\n\n  var strQueryParams = Qs.stringify(queryParams || {});\n  if(strQueryParams) {\n    path += \"?\" + strQueryParams;\n  }\n\n  return path;\n};\n\nRouter.prototype.onRouteRegister = function(cb) {\n  this._onRouteCallbacks.push(cb);\n};\n\nRouter.prototype._triggerRouteRegister = function(currentRoute) {\n  // We should only need to send a safe set of fields on the route\n  // object.\n  // This is not to hide what's inside the route object, but to show \n  // these are the public APIs\n  var routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n  var omittingOptionFields = [\n    'triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name'\n  ];\n  routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);\n\n  _.each(this._onRouteCallbacks, function(cb) {\n    cb(routePublicApi);\n  });\n};\n\n\nRouter.prototype.go = function() {\n  // client only\n};\n\n\nRouter.prototype.current = function() {\n  // client only\n};\n\n\nRouter.prototype.triggers = {\n  enter: function() {\n    // client only\n  },\n  exit: function() {\n    // client only\n  }\n};\n\nRouter.prototype.middleware = function() {\n  // client only\n};\n\n\nRouter.prototype.getState = function() {\n  // client only\n};\n\n\nRouter.prototype.getAllStates = function() {\n  // client only\n};\n\n\nRouter.prototype.setState = function() {\n  // client only\n};\n\n\nRouter.prototype.removeState = function() {\n  // client only\n};\n\n\nRouter.prototype.clearStates = function() {\n  // client only\n};\n\n\nRouter.prototype.ready = function() {\n  // client only\n};\n\n\nRouter.prototype.initialize = function() {\n  // client only\n};\n\nRouter.prototype.wait = function() {\n  // client only\n};\n","Group = function(router, options) {\n  options = options || {};\n  this.prefix = options.prefix || '';\n\n  this._router = router;\n};\n\nGroup.prototype.route = function(pathDef, options) {\n  pathDef = this.prefix + pathDef;\n  return this._router.route(pathDef, options);\n};\n\nGroup.prototype.group = function(options) {\n  var group = new Group(this._router, options);\n  group.parent = this;\n\n  return group;\n};\n","Route = function(router, pathDef, options) {\n  options = options || {};\n  this.options = options;\n  this.name = options.name;\n  this.pathDef = pathDef;\n\n  // Route.path is deprecated and will be removed in 3.0\n  this.path = pathDef;\n\n  this.action = options.action || Function.prototype;\n  this.subscriptions = options.subscriptions || Function.prototype;\n  this._subsMap = {};\n};\n\n\nRoute.prototype.register = function(name, sub, options) {\n  this._subsMap[name] = sub;\n};\n\n\nRoute.prototype.subscription = function(name) {\n  return this._subsMap[name];\n};\n\n\nRoute.prototype.middleware = function(middleware) {\n \n};\n","// Export Router Instance\nFlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\n","if(!Package['meteorhacks:fast-render']) {\n  return;\n}\n\nFastRender = Package['meteorhacks:fast-render'].FastRender;\n\n// hack to run after eveything else on startup\nMeteor.startup(function () {\n  Meteor.startup(function () {\n    setupFastRender();\n  });\n});\n\nfunction setupFastRender () {\n  _.each(FlowRouter._routes, function (route) {\n    FastRender.route(route.pathDef, function (routeParams, path) {\n      var self = this;\n\n      // anyone using Meteor.subscribe for something else?\n      var original = Meteor.subscribe;\n      Meteor.subscribe = function () {\n        return _.toArray(arguments);\n      };\n\n      route._subsMap = {};\n      FlowRouter.subscriptions.call(route, path);\n      if(route.subscriptions) {\n        var queryParams = routeParams.query;\n        var params = _.omit(routeParams, 'query');\n        route.subscriptions(params, queryParams);\n      }\n      _.each(route._subsMap, function (args) {\n        self.subscribe.apply(self, args);\n      });\n\n      // restore Meteor.subscribe, ... on server side\n      Meteor.subscribe = original;\n    });\n  });\n}\n"]}